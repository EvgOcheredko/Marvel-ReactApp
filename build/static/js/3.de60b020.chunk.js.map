{"version":3,"sources":["components/errorMessage/error.gif","components/errorMessage/ErrorMessage.js","services/MarvelService.js","hooks/http.hook.js","resources/img/mjolnir.png","components/randomChar/RandomChar.js","components/charList/CharList.js","components/skeleton/Skeleton.js","components/charInfo/CharInfo.js","components/errorBoundary/ErrorBoundary.js","resources/img/vision.png","components/pages/MainPage.js"],"names":["ErrorMessage","_jsx","style","display","width","height","objectFit","margin","alt","src","img","useMarvelService","_useHttp","_useState","useState","_useState2","_slicedToArray","loading","setLoading","_useState3","_useState4","error","setError","request","useCallback","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","url","method","body","headers","response","data","_args","arguments","wrap","_context","prev","next","length","undefined","fetch","sent","ok","Error","concat","status","json","abrupt","t0","message","stop","_x","apply","clearError","useHttp","_apiBase","_apiKey","getAllCharacters","offset","res","results","map","_transformCharacter","getCharacter","_ref2","_callee2","id","_context2","getAllComics","_ref3","_callee3","_args3","_context3","_transformComics","getComics","_ref4","_callee4","_context4","_x2","char","name","description","slice","thumbnail","path","extension","homepage","urls","wiki","comics","items","_comics$textObjects$","title","pageCount","language","textObjects","price","prices","View","imgStyle","_jsxs","className","children","href","RandomChar","setChar","_useMarvelService","useEffect","updateChar","timerId","setInterval","clearInterval","onCharLoaded","Math","floor","random","then","errorMessage","spinner","Spinner","content","onClick","mjolnir","CharList","props","charList","setCharList","newItemLoading","setNewItemLoading","_useState5","_useState6","setOffset","_useState7","_useState8","charEnded","setCharEnded","onRequest","initial","onCharListLoaded","newCharList","ended","_toConsumableArray","itemRefs","useRef","focusOnItem","current","forEach","item","classList","remove","add","focus","arr","i","tabIndex","ref","el","onCharSelected","onKeyPress","e","key","renderItems","disabled","Skeleton","_Fragment","CharInfo","charId","skeleton","ErrorBoundary","_Component","_inherits","_super","_createSuper","_this","_classCallCheck","_len","args","Array","_key","call","state","_createClass","value","errorInfo","this","setState","Component","MainPage","selectedChar","decoration"],"mappings":"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","file":"static/js/3.de60b020.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/error.42292aa1.gif\";","import img from './error.gif';\n\nconst ErrorMessage = () => {\n    return (\n        <img style={{display: 'block', width: \"250px\", height: \"250px\", objectFit: 'contain', margin: \"0 auto\"}} alt='error' src={img}/>\n    )\n}\n\nexport default ErrorMessage;","import {useHttp} from \"../hooks/http.hook\";\n\nconst useMarvelService = () => {\n    const {loading, request, error, clearError} = useHttp();\n\n    const _apiBase = 'https://gateway.marvel.com:443/v1/public/';\n    const _apiKey ='apikey=993623c1fc10647618abb717109bbb3c';\n    const _baseOffset = 210;\n\n    const getAllCharacters = async (offset = _baseOffset) => {\n        const res = await request(`${_apiBase}characters?limit=9&offset=${offset}&${_apiKey}`);\n        return res.data.results.map(_transformCharacter);\n    }\n\n    const getCharacter = async (id) => {\n        const res = await request(`${_apiBase}characters/${id}?${_apiKey}`);\n        return _transformCharacter(res.data.results[0]);\n    }\n\n    const getAllComics = async (offset = 0) => {\n        const res = await request(`${_apiBase}comics?orderBy=issueNumber&limit=8&offset=${offset}&${_apiKey}`);\n        return res.data.results.map(_transformComics);\n    }\n\n    const getComics = async (id) => {\n        const res = await request(`${_apiBase}comics/${id}?${_apiKey}`);\n        return _transformComics(res.data.results[0]);\n    }\n\n    const _transformCharacter = (char) => {\n        return {\n            id: char.id,\n            name: char.name,\n            description: char.description  ? `${char.description.slice(0, 210)}...` : 'There is no description for this character',\n            thumbnail: char.thumbnail.path + '.' + char.thumbnail.extension,\n            homepage: char.urls[0].url,\n            wiki: char.urls[1].url,\n            comics: char.comics.items\n        }\n    }\n\n    const _transformComics = (comics) => {\n        return {\n            id: comics.id,\n            title: comics.title,\n            description: comics.description || \"There is no description\",\n            pageCount: comics.pageCount\n                ? `${comics.pageCount} p.`\n                : \"No information about the number of pages\",\n            thumbnail: comics.thumbnail.path + \".\" + comics.thumbnail.extension,\n            language: comics.textObjects[0]?.language || \"en-us\",\n            price: comics.prices[0].price\n                ? `${comics.prices[0].price}$`\n                : \"not available\",\n        };\n    }\n\n    return {loading, error, clearError, getAllCharacters, getCharacter, getAllComics, getComics};\n}\n\nexport default useMarvelService;","import { useState, useCallback } from \"react\";\n\nexport const useHttp = () => {\n    const [loading, setLoading] = useState(false);\n    const [error, setError] = useState(null);\n\n    const request = useCallback(async (url, method = 'GET', body = null, headers = {'Content-Type': 'application/json'}) => {\n\n        setLoading(true);\n\n        try {\n            const response = await fetch(url, {method, body, headers});\n\n            if (!response.ok) {\n                throw new Error(`Could not fetch ${url}, status: ${response.status}`);\n            }\n\n            const data = await response.json();\n\n            setLoading(false);\n            return data;\n        } catch(e) {\n            setLoading(false);\n            setError(e.message);\n            throw e;\n        }\n    }, []);\n\n    const clearError = useCallback(() => setError(null), []);\n\n    return {loading, request, error, clearError}\n}","export default __webpack_public_path__ + \"static/media/mjolnir.61f31e18.png\";","import {useState, useEffect} from \"react\";\n\nimport './randomChar.scss';\nimport mjolnir from '../../resources/img/mjolnir.png';\nimport useMarvelService from \"../../services/MarvelService\";\nimport Spinner from \"../spinner/Spinner\";\nimport ErrorMessage from \"../errorMessage/ErrorMessage\";\n\nconst RandomChar = () => {\n\n    const [char, setChar] = useState({});\n    const {loading, error, getCharacter, clearError} = useMarvelService();\n\n    useEffect(() => {\n        updateChar();\n        const timerId = setInterval(updateChar, 60000);\n\n        return () => {\n            clearInterval(timerId)\n        }\n    }, [])\n\n    const onCharLoaded = (char) => {\n        setChar(char);\n    }\n\n    const updateChar = () => {\n        clearError();\n        const id = Math.floor(Math.random() * (1011400 - 1011000) + 1011000);\n        getCharacter(id)\n            .then(onCharLoaded)\n    }\n\n        const errorMessage = error ? <ErrorMessage/> : null;\n        const spinner = loading ? <Spinner/> : null;\n        const content = !(loading || error) ? <View char={char}/> : null;\n\n        return (\n            <div className=\"randomchar\">\n                {errorMessage}\n                {spinner}\n                {content}\n                <div className=\"randomchar__static\">\n                    <p className=\"randomchar__title\">\n                        Random character for today!<br/>\n                        Do you want to get to know him better?\n                    </p>\n                    <p className=\"randomchar__title\">\n                        Or choose another one\n                    </p>\n                    <button onClick={updateChar} className=\"button button__main\">\n                        <div className=\"inner\">try it</div>\n                    </button>\n                    <img src={mjolnir} alt=\"mjolnir\" className=\"randomchar__decoration\"/>\n                </div>\n            </div>\n        )\n}\n\nconst View = ({char}) => {\n    const {name, description, thumbnail, homepage, wiki} = char;\n    let imgStyle = {'objectFit' : 'cover'};\n    if (thumbnail === 'http://i.annihil.us/u/prod/marvel/i/mg/b/40/image_not_available.jpg') {\n        imgStyle = {'objectFit' : 'contain'};\n    }\n    return (\n        <div className=\"randomchar__block\">\n            <img src={thumbnail} alt=\"Random character\" className=\"randomchar__img\" style={imgStyle}/>\n            <div className=\"randomchar__info\">\n                <p className=\"randomchar__name\">{name}</p>\n                <p className=\"randomchar__descr\">\n                    {description}\n                </p>\n                <div className=\"randomchar__btns\">\n                    <a href={homepage} className=\"button button__main\">\n                        <div className=\"inner\">homepage</div>\n                    </a>\n                    <a href={wiki} className=\"button button__secondary\">\n                        <div className=\"inner\">Wiki</div>\n                    </a>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default RandomChar;","import {useState, useEffect, useRef} from \"react\";\n\nimport './charList.scss';\nimport ErrorMessage from \"../errorMessage/ErrorMessage\";\nimport useMarvelService from \"../../services/MarvelService\";\nimport Spinner from \"../spinner/Spinner\";\nimport PropTypes from \"prop-types\";\n\nconst CharList = (props) => {\n\n    const [charList, setCharList] = useState([]);\n    const [newItemLoading, setNewItemLoading] = useState(false);\n    const [offset, setOffset] = useState(210);\n    const [charEnded, setCharEnded] = useState(false);\n\n    const {loading, error, getAllCharacters} = useMarvelService();\n\n    useEffect(() => {\n        onRequest(offset, true);\n    }, [])\n\n    const onRequest = (offset, initial) => {\n        initial ? setNewItemLoading(false) : setNewItemLoading(true);\n        getAllCharacters(offset)\n            .then(onCharListLoaded)\n    }\n\n    const onCharListLoaded = (newCharList) => {\n        let ended = false;\n        if (newCharList.length < 9) {\n            ended = true;\n        }\n\n        setCharList(charList => [...charList, ...newCharList]);\n        setNewItemLoading(newItemLoading => false);\n        setOffset(offset => offset + 9);\n        setCharEnded(charEnded => ended);\n    }\n\n    const itemRefs = useRef([]);\n\n    const focusOnItem = (id) => {\n        itemRefs.current.forEach(item => item.classList.remove('char__item_selected'));\n        itemRefs.current[id].classList.add('char__item_selected');\n        itemRefs.current[id].focus();\n    }\n\n    function renderItems(arr) {\n        const items = arr.map((item, i) => {\n            let imgStyle = {'objectFit' : 'cover'};\n            if (item.thumbnail === 'http://i.annihil.us/u/prod/marvel/i/mg/b/40/image_not_available.jpg') {\n                imgStyle = {'objectFit' : 'unset'};\n            }\n\n            return (\n                <li\n                    className=\"char__item\"\n                    tabIndex={0}\n                    ref={el => itemRefs.current[i] = el}\n                    key={item.id}\n                    onClick={() => {\n                        props.onCharSelected(item.id);\n                        focusOnItem(i);\n                    }}\n                    onKeyPress={(e) => {\n                        if (e.key === ' ' || e.key === \"Enter\") {\n                            props.onCharSelected(item.id);\n                            focusOnItem(i);\n                        }\n                    }}>\n\n                    <img src={item.thumbnail} alt={item.name} style={imgStyle}/>\n                    <div className=\"char__name\">{item.name}</div>\n                </li>\n            )\n        });\n\n        return (\n            <ul className=\"char__grid\">\n                {items}\n            </ul>\n        )\n    }\n\n    const items = renderItems(charList);\n\n    const errorMessage = error ? <ErrorMessage/> : null;\n    const spinner = loading && !newItemLoading ? <Spinner/> : null;\n\n    return (\n        <div className=\"char__list\">\n            {errorMessage}\n            {spinner}\n            {items}\n            <button\n                className=\"button button__main button__long\"\n                disabled={newItemLoading}\n                style={{'display' : charEnded ? 'none' : 'block'}}\n                onClick={() => onRequest(offset)}>\n                <div className=\"inner\">load more</div>\n            </button>\n        </div>\n    )\n}\n\nCharList.propTypes = {\n    onCharSelected: PropTypes.func.isRequired\n}\n\nexport default CharList;","import './skeleton.scss';\n\nconst Skeleton = () => {\n    return (\n        <>\n            <p className=\"char__select\">Please select a character to see information</p>\n            <div className=\"skeleton\">\n                <div className=\"pulse skeleton__header\">\n                    <div className=\"pulse skeleton__circle\"></div>\n                    <div className=\"pulse skeleton__mini\"></div>\n                </div>\n                <div className=\"pulse skeleton__block\"></div>\n                <div className=\"pulse skeleton__block\"></div>\n                <div className=\"pulse skeleton__block\"></div>\n            </div>\n        </>\n    )\n}\n\nexport default Skeleton;","import {useState, useEffect} from \"react\";\nimport PropTypes from 'prop-types';\n\nimport './charInfo.scss';\nimport useMarvelService from \"../../services/MarvelService\";\nimport ErrorMessage from \"../errorMessage/ErrorMessage\";\nimport Spinner from \"../spinner/Spinner\";\nimport Skeleton from \"../skeleton/Skeleton\";\n\nconst CharInfo = (props) => {\n\n    const [char, setChar] = useState(null);\n    const {loading, error, getCharacter, clearError} = useMarvelService();\n\n    useEffect(() => {\n        updateChar();\n    }, [props.charId])\n\n    const updateChar = () => {\n        const {charId} = props;\n        if (!charId) {\n            return;\n        }\n        clearError();\n        getCharacter(charId)\n            .then(onCharLoaded)\n    }\n\n    const onCharLoaded = (char) => {\n        setChar(char);\n    }\n\n    const skeleton = char || loading || error ? null : <Skeleton/>;\n    const errorMessage = error ? <ErrorMessage/> : null;\n    const spinner = loading ? <Spinner/> : null;\n    const content = !(loading || error || !char) ? <View char={char}/> : null;\n\n    return (\n        <div className=\"char__info\">\n            {skeleton}\n            {errorMessage}\n            {spinner}\n            {content}\n        </div>\n    )\n}\n\nconst View = ({char}) => {\n    const {name, description, thumbnail, homepage, wiki, comics} = char;\n\n    let imgStyle = {'objectFit' : 'cover'};\n    if (thumbnail === 'http://i.annihil.us/u/prod/marvel/i/mg/b/40/image_not_available.jpg') {\n        imgStyle = {'objectFit' : 'contain'};\n    }\n\n    return (\n        <>\n            <div className=\"char__basics\">\n                <img src={thumbnail} alt={name} style={imgStyle}/>\n                <div>\n                    <div className=\"char__info-name\">{name}</div>\n                    <div className=\"char__btns\">\n                        <a href={homepage} className=\"button button__main\">\n                            <div className=\"inner\">homepage</div>\n                        </a>\n                        <a href={wiki} className=\"button button__secondary\">\n                            <div className=\"inner\">Wiki</div>\n                        </a>\n                    </div>\n                </div>\n            </div>\n            <div className=\"char__descr\">\n                {description}\n            </div>\n            <div className=\"char__comics\">Comics:</div>\n            <ul className=\"char__comics-list\">\n                {comics.length > 0 ? null : 'There is no comics with this character'}\n                {\n                    comics.map((item, i) => {\n                        if (i > 9) return;\n                        return (\n                            <li key={i} className=\"char__comics-item\">\n                                {item.name}\n                            </li>\n                        )\n                    })\n                }\n            </ul>\n        </>\n    )\n}\n\nCharInfo.propTypes = {\n    charId: PropTypes.number\n}\n\nexport default CharInfo;","import {Component} from \"react\";\nimport ErrorMessage from \"../errorMessage/ErrorMessage\";\n\nclass ErrorBoundary extends Component {\n    state = {\n        error: false\n    }\n\n    componentDidCatch(error, errorInfo) {\n        this.setState({\n            error: true\n        })\n    }\n\n    render() {\n        if (this.state.error) {\n            return <ErrorMessage/>\n        }\n\n        return this.props.children;\n    }\n}\n\nexport default ErrorBoundary;","export default __webpack_public_path__ + \"static/media/vision.067d4ae1.png\";","import {useState} from \"react\";\n\nimport RandomChar from \"../randomChar/RandomChar\";\nimport CharList from \"../charList/CharList\";\nimport CharInfo from \"../charInfo/CharInfo\";\nimport ErrorBoundary from \"../errorBoundary/ErrorBoundary\";\n\nimport decoration from '../../resources/img/vision.png';\n\nconst MainPage = () => {\n\n    const [selectedChar, setChar] = useState(null);\n\n    const onCharSelected = (id) => {\n        setChar(id);\n    }\n\n    return(\n        <>\n            <ErrorBoundary>\n                <RandomChar/>\n            </ErrorBoundary>\n            <div className=\"char__content\">\n                <ErrorBoundary>\n                    <CharList onCharSelected={onCharSelected}/>\n                </ErrorBoundary>\n                <ErrorBoundary>\n                    <CharInfo charId={selectedChar}/>\n                </ErrorBoundary>\n            </div>\n            <img className=\"bg-decoration\" src={decoration} alt=\"vision\"/>\n        </>\n    )\n}\n\nexport default MainPage;"],"sourceRoot":""}